apply plugin: 'org.asciidoctor.convert'

ext {
    testSrcRoot = 'apidocs'
    sourceDocsLocation = 'src/doc'
    snippetsDir = file('build/generated-snippets')
    archiveLocation = 'static/docs'
}

dependencies {
    testCompile 'org.springframework.restdocs:spring-restdocs-core:1.1.0.RC1'
    testCompile 'org.springframework.restdocs:spring-restdocs-restassured:1.1.0.RC1'
}

sourceSets {
    doc {
        resources.srcDir file("$sourceDocsLocation/resources")
    }
}


jar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5/index.html") { into archiveLocation }
    from("${asciidoctor.outputDir}/pdf/index.pdf") { into archiveLocation }
}


test {
    exclude "$testSrcRoot/**"
}

task apiDocTests(type: Test) {
    description = 'Runs the API documentation tests (generates doc snippets to build/generated-snippets but does not process into HTML)'
    group = 'documentation'
    include "$testSrcRoot/**"
    classpath = sourceSets.test.runtimeClasspath + files("$sourceDocsLocation/resources")
}

task generateApiDocs(dependsOn: ['apiDocTests', 'asciidoctor']){
    description = 'Generates the API documentation - look in build/asciidoc for the output'
    group 'documentation'
    onlyFor(generateApiDocs) {asciidoctor.enabled = true}
}

task buildWithApiDocs(dependsOn: ['apiDocTests', 'build']){
    description 'Same as build but also generates API docs and adds them to the jar'
    group 'build'
    onlyFor(buildWithApiDocs) {asciidoctor.enabled = true}
}

asciidoctor {
    description = 'You should use the generateApiDocs task instead'
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    outputDir 'build/asciidoc'
    sourceDir "$sourceDocsLocation/asciidoc"
    backends 'pdf', 'html5'
}.enabled(false)
