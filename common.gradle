allprojects{

    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'application'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://repo.spring.io/libs-milestone' }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.3'
    compile 'org.json:json:20160212'

    testCompile 'cglib:cglib-nodep:3.2.1'
    testCompile 'com.jayway.jsonpath:json-path:2.2.0'
    testCompile 'org.codehaus.groovy:groovy-all:2.4.3'
    testCompile 'org.json:json:20160212'
    testCompile 'org.objenesis:objenesis:2.2'
    testCompile 'org.springframework:spring-test:4.2.5.RELEASE'
    testCompile 'info.cukes:cucumber-java:1.2.4'
    testCompile 'info.cukes:cucumber-junit:1.2.4'
    testCompile 'info.cukes:gherkin:2.12.2'
    testCompile 'junit:junit:4.12'
    testCompile 'net.serenity-bdd:serenity-core:1.1.28'
    testCompile 'net.serenity-bdd:serenity-cucumber:1.1.6'
    testCompile 'net.serenity-bdd:serenity-junit:1.1.1'
    testCompile 'org.mockito:mockito-all:1.10.19:'
}

ext.libraries = [

    logging: [
        'ch.qos.logback:logback-classic:1.1.3',
        'ch.qos.logback:logback-core:1.1.3',
        'org.slf4j:slf4j-parent:1.7.14'
    ],

    jackson: [
        'com.fasterxml.jackson.core:jackson-annotations:2.7.2',
        'com.fasterxml.jackson.core:jackson-databind:2.6.3'
    ],

    mongo: [
        'org.mongodb:bson:3.0.4',
        'org.mongodb:mongodb-driver:3.0.4'
    ],

    springboot: [
        'org.springframework.boot:spring-boot:1.3.3.RELEASE',
        'org.springframework.boot:spring-boot-starter-web:1.3.3.RELEASE'
    ],

    restassured: [
        'com.jayway.restassured:json-schema-validator:2.9.0',
        'com.jayway.restassured:rest-assured:2.9.0'
    ],

    spock: [
        'org.spockframework:spock-core:1.0-groovy-2.4',
        'org.spockframework:spock-spring:1.0-groovy-2.4'
    ]
]

// Apply configuration only when the given task is in the task execution graph
ext.onlyFor = { task, config ->
    gradle.taskGraph.whenReady { graph ->
        if (graph.hasTask(task)) {
            project.configure(project, config)
        }
    }
}
